name: Autograding Tests
on:
  - push
  - workflow_dispatch
  - repository_dispatch
permissions:
  checks: write
  actions: read
  contents: read
jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      # This is where you place your autograding tests
      # For more information on this runner, see the documentation at: https://github.com/classroom-resources/autograding-io-grader
      #
      # For example, you could run a test suite like this:
      # - name: Run tests
      #   uses: classroom-resources/autograding-io-grader@v1
      #     with:
      #       test-name: Addition Test
      #       id: addition-test
      #       command: "./bin/add.sh"
      #       input: 1 2
      #       expected-output: 3
      #       comparison-method: exact
      #       timeout: 10
    - name: Question 0a
      id: question-0a
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: 'Question 0a: group.txt exists'
        command: 'ls group.txt'
        timeout: '10'
        max-score: '0'
    - name: Question 0b
      id: question-0b
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: 'Question 0b: group.txt is not empty'
        command: 'ls group.txt && [ -s group.txt ]'
        timeout: '10'
        max-score: '0'
    - name: Question 1
      id: question-1
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: 'Question 1'
        setup-command: 'conda install python=3.9 --yes; conda install -c potassco clingo=5.7.1 --yes; conda init'
        command: 'ls group.txt && [ -s group.txt ] && /usr/share/miniconda/bin/python3.9 autograder.py --clingo /usr/share/miniconda/bin/clingo --question=1'
        timeout: '10'
        max-score: '30'
    - name: Question 2
      id: question-2
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: 'Question 2'
        setup-command: 'conda install python=3.9 --yes; conda install -c potassco clingo=5.7.1 --yes; conda init'
        command: 'ls group.txt && [ -s group.txt ] && /usr/share/miniconda/bin/python3.9 autograder.py --clingo /usr/share/miniconda/bin/clingo --question=2'
        timeout: '10'
        max-score: '25'
    - name: Question 3
      id: question-3
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: 'Question 3'
        setup-command: 'conda install python=3.9 --yes; conda install -c potassco clingo=5.7.1 --yes; conda init'
        command: 'ls group.txt && [ -s group.txt ] && /usr/share/miniconda/bin/python3.9 autograder.py --clingo /usr/share/miniconda/bin/clingo --question=3'
        timeout: '10'
        max-score: '25'
    - name: Question 4
      id: question-4
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: 'Question 4'
        setup-command: 'conda install python=3.9 --yes; conda install -c potassco clingo=5.7.1 --yes; conda init'
        command: 'ls group.txt && [ -s group.txt ] && /usr/share/miniconda/bin/python3.9 autograder.py --clingo /usr/share/miniconda/bin/clingo --question=4'
        timeout: '10'
        max-score: '20'
    - name: Autograding Reporter
      uses: classroom-resources/autograding-grading-reporter@v1
      # For more information on this runner, see the documentation at https://github.com/classroom-resources/autograding-grading-reporter
      # To output the results of the tests, you can use the
      # autograding-grading-reporter action like this:
      env:
        QUESTION-0A_RESULTS: "${{steps.question-0a.outputs.result}}"
        QUESTION-0B_RESULTS: "${{steps.question-0b.outputs.result}}"
        QUESTION-1_RESULTS: "${{steps.question-1.outputs.result}}"
        QUESTION-2_RESULTS:  "${{steps.question-2.outputs.result}}"
        QUESTION-3_RESULTS:  "${{steps.question-3.outputs.result}}"
        QUESTION-4_RESULTS:  "${{steps.question-4.outputs.result}}"
      with:
          runners: 'question-0a,question-0b,question-1,question-2,question-3,question-4'

